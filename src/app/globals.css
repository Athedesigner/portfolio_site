@tailwind base;
@tailwind components;
@tailwind utilities;


@keyframes bounce-up {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }
  100% {
    transform: translateY(var(--bounce-up-end, 0%));
    opacity: 1;
  }
}

.animate-bounce-up {
  animation: bounce-up 1s ease-out;
}

/* Slider toggle specific styles */
.toggle-slider {
  position: relative;
  width: 3rem;
  height: 1.5rem;
  border-radius: 1rem;
  cursor: pointer;
  transition: background-color 0.3s;
}

.toggle-slider .slider-thumb {
  position: absolute;
  width: 1.25rem;
  height: 1.25rem;
  border-radius: 50%;
  background-color: #fff;
  transition: transform 0.3s;
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-5px);
  }
  60% {
    transform: translateY(-5px);
  }
}

.animate-bounce {
  animation: bounce 1s ease;
}

/* styles/globals.css */

/* For WebKit browsers */
::-webkit-scrollbar {
  width: 50px; /* Width of the scrollbar */
  height: 12px; /* Height of the scrollbar (for horizontal scrollbar) */
}

::-webkit-scrollbar-track {
  background: #333; /* Background of the scrollbar track */
  border-radius: 10px; /* Rounded corners for the track */
}

::-webkit-scrollbar-thumb {
  background: #888; /* Color of the scrollbar thumb */
  border-radius: 10px; /* Rounded corners for the thumb */
  border: 3px solid #333; /* Creates a padding effect */
}

::-webkit-scrollbar-thumb:hover {
  background: #555; /* Color when hovered */
}

/* For Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: #888 #333;
}

body {
  padding: 0;
  margin: 0;
  background: #000;
}

.new__bg {
  height: 100%;
  min-height: 500px;
  display: flex;
  justify-content: center;
  align-items: center; 
  background-color: #000 !important; 
  background: #000 !important;
}

.hello__div {
  display: flex;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  text-align: center;
  width: 100%;
  max-width: 600px;
  background-color: #000 !important;
}

.hello__svg {
  fill: none;
  stroke: #ffcf00; /* Change stroke color to #ffcf00 */
  stroke-linecap: round;
  stroke-miterlimit: 10;
  stroke-width: 48px;
  stroke-dasharray: 5800px;
  stroke-dashoffset: 5800px;
  animation: anim__hello linear 2.5s forwards;
  width: 100%;
  background-color: #000;
}

@keyframes anim__hello {
  0% {
    stroke-dashoffset: 5800;
  }
  25% {
    stroke-dashoffset: 5800;
  }
  100% {
    stroke-dashoffset: 0;
  }
}
body {
  padding: 0;
  margin: 0;
}

.hello__div {
  display: flex;
  justify-content: center;
  flex-direction: column;
  margin: 0 auto;
  text-align: center;
  width: 100%;
  max-width: 600px;
}

/* globals.css */

/* globals.css */

.hamburger-icon {
  width: 30px;
  height: 20px;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  cursor: pointer;
}

.hamburger-icon .line {
  width: 100%;
  height: 4px;
  border-radius: 2px;
  transition: transform 0.3s, opacity 0.3s;
}

.hamburger-icon.active .line:nth-child(1) {
  transform: translateY(8px) rotate(45deg);
}

.hamburger-icon.active .line:nth-child(2) {
  opacity: 0;
}

.hamburger-icon.active .line:nth-child(3) {
  transform: translateY(-8px) rotate(-45deg);
}


/* Overlay styles */
.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none; /* Prevents overlay from blocking interaction */
  z-index: -1; /* Ensure it is below the lines */
  background-color: rgba(0, 0, 0, 0.2); /* Default overlay color */
}

.dark-overlay {
  background-color: rgba(0, 0, 0, 0.2); /* Dark mode overlay color */
}

.light-overlay {
  background-color: rgba(255, 255, 255, 0.4); /* Light mode overlay color */
}

/* globals.css or a relevant CSS module */

.cursive-text {
  font-family: 'Brush Script MT', cursive;
  font-size: 24px;
  background: linear-gradient(to right, #ff7e5f, #feb47b);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: cursive-animation 3s infinite;
}

@keyframes cursive-animation {
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  50% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
    transform: translateX(20px);
  }
}